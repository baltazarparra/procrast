{"version":3,"sources":["Stores/Store.js","Components/postList.jsx","Components/navigation.jsx","App.js","index.js","registerServiceWorker.js"],"names":["PostsContext","React","createContext","Store","children","useState","post","setPost","loading","setLoading","useEffect","a","fetch","response","json","data","fetchData","Provider","value","color","background","customLoading","List","styled","ul","ListItem","li","Link","Sub","p","PostList","useContext","map","index","key","href","url","title","author","score","comments","comment_link","one_sources","Header","header","MenuButton","Title","h3","Nav","nav","ListLink","Navigation","handleList","source","onClick","role","aria-label","id","name","item","Wrapper","div","App","render","document","getElementById","navigator","window","addEventListener","swUrl","process","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error"],"mappings":"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","file":"static/js/main.0fd9848b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Lines } from 'react-preloaders'\n\nexport const PostsContext = React.createContext([])\n\nexport default function Store({children}) {\n  const [post, setPost] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch('https://www.reader.one/api/all/hn,reddit,ph,slashdot,dn,github,medium,lifehacker?limit=10')\n      const data = await response.json()\n\n      setLoading(false)\n      setPost(data)\n    }\n\n    fetchData()\n  }, [])\n\n  useEffect(() => {\n    setLoading(false)\n  }, [post])\n\n  return (\n    <PostsContext.Provider value={[post, setPost]}>\n      {children}\n      <Lines color={'#bbb'} background=\"#333\" customLoading={loading} />\n    </PostsContext.Provider>\n  )\n}\n","import React, { useContext } from 'react'\nimport { PostsContext } from '../Stores/Store'\nimport styled from 'styled-components'\nimport { Reset } from 'styled-reset'\n\nconst List = styled.ul`\n  padding: 1em;\n  background: #333;\n  overflow: scroll;\n  height: calc(100vh - 76px);\n\n  @media (min-width: 768px) {\n    height: 100vh;\n    flex: 6;\n  }\n`\n\nconst ListItem = styled.li`\n  padding: 1em;\n  &:hover {\n    background-color: #444;\n  }\n`\n\nconst Link = styled.a`\n  display: block;\n  font-family: sans-serif;\n  text-decoration: none;\n  color: #bbb;\n`\n\nconst Sub = styled.p`\n  display: inline-block;\n  font-family: sans-serif;\n  font-size: .8em;\n  color: #888;\n  padding-right: .4em;\n\n  a {\n    color: #ccc;\n  }\n\n  b {\n      font-weight: bold;\n  }\n`\n\nconst PostList = () => {\n  const [post] = useContext(PostsContext)\n\n  return (\n    <List>\n      <Reset />\n      {post.map((post, index) =>\n        <ListItem key={index}>\n          <Link href={post.url}>{post.title}</Link>\n          { post.author &&\n            <Sub>Author: {post.author}</Sub>\n          }\n          { post.score &&\n            <Sub>Score: {post.score}</Sub>\n          }\n          { post.comments > 0 &&\n            <Sub>\n              <a href={post.comment_link}>\n                <span>{post.comments}</span> comments\n              </a>\n            </Sub>\n          }\n          { post.one_sources[0] &&\n            <Sub>\n                <b>source: {post.one_sources[0]}</b>\n            </Sub>\n          }\n        </ListItem>)}\n    </List>\n  )\n}\n\nexport default PostList\n","import React, { useContext } from 'react'\nimport { PostsContext } from '../Stores/Store'\nimport styled from 'styled-components'\n\nconst Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  line-height: 2;\n  border-bottom: solid 1px #333;\n  padding-right: 1em;\n  background-color: #666;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`\nconst MenuButton = styled.a`\n  font-family: sans-serif;\n  font-size: 1.4em;\n  text-decoration: none;\n  padding-right: 0;\n  color: #ccc;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`\n\nconst Title = styled.h3`\n  font-family: sans-serif;\n  font-size: 1.4em;\n  padding-left: 1.4em;\n  color: #ccc;\n\n  @media (min-width: 768px) {\n    font-size: 1.4em;\n    font-weight: bold;\n    padding-left: .6em;\n    line-height: 2;\n  }\n`\n\nconst Nav = styled.nav`\n  position: fixed;\n  top: 0;\n  right: 0;\n  flex: 1;\n  height: 100vh;\n  line-height: 2;\n  text-align: right;\n  background-color: #666;\n  padding: 0 1em 0 4em;\n\n  &:not(:target) {\n    transform: translateX(100%);\n    transition: right 1.5s;\n    box-shadow: 0 0 0 rgba(0,0,0,0.12), 0 0 0 rgba(0,0,0,0.24);\n  }\n\n  &:target {\n    transform: translateX(0);\n    transform-origin: bottom left;\n    transition: right 1s;\n  }\n\n  h3 {\n    display: none;\n  }\n\n  @media (min-width: 768px) {\n    position: inherit;\n    flex: 1;\n    text-align: left;\n    padding: 1.4em;\n    margin: 0;\n    line-height: 1;\n\n    h3 {\n      display: block;\n    }\n\n    &:not(:target) {\n      transform: translateX(0);\n    }\n\n    &:target {\n      transform: translateX(0);\n    }\n  }\n`\n\nconst ListItem = styled.li`\n  font-family: sans-serif;\n  margin: 0;\n  padding: 0;\n  cursor: pointer;\n  box-shadow: 0 0 0 rgba(0,0,0,0.12), 0 0 0 rgba(0,0,0,0.24);\n  transition: all 0.3s cubic-bezier(.25,.8,.25,1);\n\n  &:hover {\n    box-shadow: 0 3px 4px rgba(0,0,0,0.03), 0 2px 4px rgba(0,0,0,0.04);\n    text-shadow: 0 3px 4px rgba(0,0,0,0.08), 0 2px 4px rgba(0,0,0,0.18);\n  }\n\n  @media (min-width: 768px) {\n    display: block;\n    margin: 0;\n    padding: .8em;\n  }\n`\n\nconst ListLink = styled.a`\n  text-decoration: none;\n  color: #ccc;\n`\n\nconst Navigation = () => {\n  const [,setPost] = useContext(PostsContext)\n\n  async function handleList(source) {\n    const response = await fetch(`https://www.reader.one/api/all/${source}?limit=35`)\n    const data = await response.json()\n\n    setPost(data)\n  }\n\n  const sources = [\n    {source: 'hn', name: 'Haker News'},\n    {source: 'reddit', name: 'Reddit'},\n    {source: 'ph', name: 'Product Hunt'},\n    {source: 'slashdot', name: 'Slashdot'},\n    {source: 'dn', name: 'Design News'},\n    {source: 'github', name: 'Github Trends'},\n    {source: 'medium',  name: 'Medium'},\n    {source: 'lifehacker', name: 'Lifehacker'}\n  ]\n\n  return (\n    <>\n      <Header>\n        <Title onClick={() => handleList('hn,reddit,ph,slashdot,dn,github,medium,lifehacker')}>\n          <span role=\"img\" aria-label=\"coffe\">☕</span> Procrast\n        </Title>\n        <MenuButton href=\"#nav\">☰Menu</MenuButton>\n    </Header>\n    <Nav id=\"nav\">\n      <Title>\n        <span role=\"img\" aria-label=\"coffe\">☕</span> Procrast\n      </Title>\n        <MenuButton href=\"https://baltazarparra.github.io/procrast/#\">☰Close</MenuButton>\n        <ul>\n          {sources.map((item, index) => (\n            <ListItem key={index} onClick={() => handleList(item.source)}>\n              <ListLink href=\"https://baltazarparra.github.io/procrast/#\">\n                  {item.name}\n              </ListLink>\n            </ListItem>))}\n        </ul>\n      </Nav>\n    </>\n  )\n}\n\nexport default Navigation\n","import React from 'react'\nimport PostList from './Components/postList'\nimport Nav from './Components/navigation'\nimport styled from 'styled-components'\nimport { Reset } from 'styled-reset'\n\nconst Wrapper = styled.div`\n  overflow-y: hidden;\n  height: 100vh;\n\n  @media (min-width: 768px) {\n    display: flex;\n  }\n`\n\nexport default function App() {\n  return (\n    <Wrapper>\n      <Reset />\n      <Nav />\n      <PostList />\n    </Wrapper>\n  )\n}","import React from 'react'\nimport { render } from 'react-dom'\nimport App from './App'\nimport Store from './Stores/Store'\nimport registerServiceWorker from './registerServiceWorker'\n\nconst Index = () => (\n  <Store>\n    <App />\n  </Store>\n)\n\nrender(<Index />, document.getElementById('root'))\n\nregisterServiceWorker()\n","export default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  console.log('New content is available; please refresh.');\n                } else {\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}