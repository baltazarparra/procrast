{"version":3,"sources":["Store.js","App.js","index.js"],"names":["RoContext","React","createContext","Store","children","useState","roPost","setRoPost","useEffect","a","fetch","response","json","data","console","log","fetchData","Provider","value","List","styled","ul","ListItem","li","Link","Sub","p","App","useContext","map","post","key","id","href","url","title","author","score","comments","comment_link","render","document","getElementById"],"mappings":"qNAEaA,EAAYC,IAAMC,cAAc,IAE9B,SAASC,EAAT,GAA4B,IAAZC,EAAW,EAAXA,SAAW,EACVC,mBAAS,IADC,mBAC/BC,EAD+B,KACvBC,EADuB,KAgBtC,OAZAC,qBAAU,WAAM,4CACZ,8BAAAC,EAAA,sEAC2BC,MAAM,6FADjC,cACUC,EADV,gBAEuBA,EAASC,OAFhC,OAEUC,EAFV,OAGIC,QAAQC,IAAIF,GAEZN,EAAUM,GALd,4CADY,uBAAC,WAAD,wBASZG,KACD,IAGC,kBAAChB,EAAUiB,SAAX,CAAoBC,MAAO,CAACZ,EAAQC,IAC/BH,G,mlBCjBb,IAAMe,EAAOC,UAAOC,GAAV,KAKJC,EAAWF,UAAOG,GAAV,KAIRC,EAAOJ,UAAOX,EAAV,KAOJgB,EAAML,UAAOM,EAAV,KAYM,SAASC,IAAO,IAAD,EACXC,qBAAW5B,GAArBM,EADqB,oBAE5B,OACE,oCACE,kBAACa,EAAD,KACE,kBAAC,QAAD,MACCb,EAAOuB,KAAI,SAAAC,GAAI,OAAI,kBAACR,EAAD,CAAUS,IAAKD,EAAKE,IACtC,kBAACR,EAAD,CAAMS,KAAMH,EAAKI,KAAMJ,EAAKK,OAC1BL,EAAKM,QACL,kBAACX,EAAD,KAAMK,EAAKM,QAEXN,EAAKO,OAAS,kBAACZ,EAAD,eAAaK,EAAKO,OAChCP,EAAKQ,SAAW,GAChB,kBAACb,EAAD,KACE,uBAAGQ,KAAMH,EAAKS,cACZ,2BAAIT,EAAKQ,UADX,oBCpCdE,iBAAO,mBANO,kBACZ,kBAACrC,EAAD,KACE,kBAACwB,EAAD,SAIG,MAAWc,SAASC,eAAe,W","file":"static/js/main.7f83c016.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nexport const RoContext = React.createContext([])\n\nexport default function Store({children}) {\n    const [roPost, setRoPost] = useState([])\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(() => {\n        async function fetchData() {\n            const response = await fetch('https://www.reader.one/api/all/hn,reddit,ph,slashdot,dn,github,medium,lifehacker?limit=20')\n            const data = await response.json()\n            console.log(data)\n\n            setRoPost(data)\n        }\n\n        fetchData()\n    }, [])\n\n    return (\n        <RoContext.Provider value={[roPost, setRoPost]}>\n            {children}\n        </RoContext.Provider>\n    )\n}","import React, { useContext } from 'react'\nimport { RoContext } from './Store'\nimport styled from 'styled-components'\nimport { Reset } from 'styled-reset'\n\nconst List = styled.ul`\n  padding: 1em;\n  background: #f4f4f4;\n`\n\nconst ListItem = styled.li`\n  margin: 1em;\n`\n\nconst Link = styled.a`\n  display: block;\n  font-family: sans-serif;\n  text-decoration: none;\n  color: #333;\n`\n\nconst Sub = styled.p`\n  display: inline-block;\n  font-family: sans-serif;\n  font-size: .8em;\n  color: #666;\n  padding-right: .4em;\n\n  a {\n    color: #666;\n  }\n`\n\nexport default function App() {\n  const [roPost] = useContext(RoContext)\n  return (\n    <>\n      <List>\n        <Reset />\n        {roPost.map(post => <ListItem key={post.id}>\n          <Link href={post.url}>{post.title}</Link>\n          { post.author &&\n            <Sub>{post.author}</Sub>\n          }\n          { post.score && <Sub>Score: {post.score}</Sub> }\n          { post.comments > 0 && \n            <Sub>\n              <a href={post.comment_link}>\n                <b>{post.comments}</b> comments\n              </a>\n            </Sub>\n          }\n        </ListItem>)}\n      </List>\n    </>\n  )\n}","import React from 'react'\nimport { render } from 'react-dom'\nimport App from './App'\nimport Store from './Store'\n\nconst Index = () => (\n  <Store>\n    <App />\n  </Store>\n)\n\nrender(<Index />, document.getElementById('root'))"],"sourceRoot":""}