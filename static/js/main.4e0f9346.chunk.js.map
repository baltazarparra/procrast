{"version":3,"sources":["Stores/Store.js","Components/postList.jsx","Components/navigation.jsx","App.js","index.js"],"names":["PostsContext","React","createContext","Store","children","useState","post","setPost","useEffect","a","fetch","response","json","data","fetchData","Provider","value","List","styled","ul","ListItem","li","Link","Sub","p","PostList","useContext","map","key","Math","random","href","url","title","author","score","comments","comment_link","one_sources","Nav","nav","Navigation","handleList","source","onClick","Wrapper","div","App","render","document","getElementById"],"mappings":"qNAEaA,EAAeC,IAAMC,cAAc,IAEjC,SAASC,EAAT,GAA4B,IAAZC,EAAW,EAAXA,SAAW,EACdC,mBAAS,IADK,mBAC/BC,EAD+B,KACzBC,EADyB,KAetC,OAXAC,qBAAU,WAAM,4CACZ,8BAAAC,EAAA,sEAC2BC,MAAM,4FADjC,cACUC,EADV,gBAEuBA,EAASC,OAFhC,OAEUC,EAFV,OAIIN,EAAQM,GAJZ,4CADY,uBAAC,WAAD,wBAQZC,KACD,IAGC,kBAACd,EAAae,SAAd,CAAuBC,MAAO,CAACV,EAAMC,IAChCH,G,0nBChBb,IAAMa,EAAOC,UAAOC,GAAV,KAKJC,EAAWF,UAAOG,GAAV,KAIRC,EAAOJ,UAAOT,EAAV,KAOJc,EAAML,UAAOM,EAAV,KA+CMC,EA/BE,WAAO,IAAD,EACJC,qBAAW1B,GAAnBM,EADY,oBAEnB,OACE,oCACE,kBAACW,EAAD,KACE,kBAAC,QAAD,MACCX,EAAKqB,KAAI,SAAArB,GAAI,OAAI,kBAACc,EAAD,CAAUQ,IAAKC,KAAKC,UACpC,kBAACR,EAAD,CAAMS,KAAMzB,EAAK0B,KAAM1B,EAAK2B,OAC1B3B,EAAK4B,QACL,kBAACX,EAAD,gBAAcjB,EAAK4B,QAEnB5B,EAAK6B,OAAS,kBAACZ,EAAD,eAAajB,EAAK6B,OAChC7B,EAAK8B,SAAW,GAChB,kBAACb,EAAD,KACE,uBAAGQ,KAAMzB,EAAK+B,cACZ,8BAAO/B,EAAK8B,UADd,cAMA9B,EAAKgC,YAAY,IACjB,kBAACf,EAAD,KACI,sCAAYjB,EAAKgC,YAAY,Y,gSCvDjD,IAAMC,EAAMrB,UAAOsB,IAAV,KA2CMC,EA3BI,WAAO,IAAD,EACFf,qBAAW1B,GAAtBO,EADa,6BAGNmC,EAHM,8EAGrB,WAA0BC,GAA1B,iBAAAlC,EAAA,sEAC2BC,MAAM,kCAAD,OAAmCiC,EAAnC,cADhC,cACUhC,EADV,gBAEuBA,EAASC,OAFhC,OAEUC,EAFV,OAIIN,EAAQM,GAJZ,4CAHqB,sBAUrB,OACI,kBAAC0B,EAAD,KACI,uCACA,4BACI,wBAAIK,QAAS,kBAAMF,EAAW,QAA9B,eACA,wBAAIE,QAAS,kBAAMF,EAAW,YAA9B,UACA,wBAAIE,QAAS,kBAAMF,EAAW,QAA9B,gBACA,wBAAIE,QAAS,kBAAMF,EAAW,cAA9B,YACA,wBAAIE,QAAS,kBAAMF,EAAW,QAA9B,iBACA,wBAAIE,QAAS,kBAAMF,EAAW,YAA9B,mBACA,wBAAIE,QAAS,kBAAMF,EAAW,YAA9B,UACA,wBAAIE,QAAS,kBAAMF,EAAW,gBAA9B,iB,yFCnChB,IAAMG,EAAU3B,UAAO4B,IAAV,KAIE,SAASC,IACtB,OACE,kBAACF,EAAD,KACE,kBAAC,QAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OCJNG,iBAAO,mBANO,kBACZ,kBAAC7C,EAAD,KACE,kBAAC4C,EAAD,SAIG,MAAWE,SAASC,eAAe,W","file":"static/js/main.4e0f9346.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nexport const PostsContext = React.createContext([])\n\nexport default function Store({children}) {\n    const [post, setPost] = useState([])\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(() => {\n        async function fetchData() {\n            const response = await fetch('https://www.reader.one/api/all/hn,reddit,ph,slashdot,dn,github,medium,lifehacker?limit=3')\n            const data = await response.json()\n\n            setPost(data)\n        }\n\n        fetchData()\n    }, [])\n\n    return (\n        <PostsContext.Provider value={[post, setPost]}>\n            {children}\n        </PostsContext.Provider>\n    )\n}","import React, { useContext } from 'react'\nimport { PostsContext } from '../Stores/Store'\nimport styled from 'styled-components'\nimport { Reset } from 'styled-reset'\n\nconst List = styled.ul`\n  padding: 1em;\n  background: #f4f4f4;\n`\n\nconst ListItem = styled.li`\n  margin: 1em;\n`\n\nconst Link = styled.a`\n  display: block;\n  font-family: sans-serif;\n  text-decoration: none;\n  color: #333;\n`\n\nconst Sub = styled.p`\n  display: inline-block;\n  font-family: sans-serif;\n  font-size: .8em;\n  color: #666;\n  padding-right: .4em;\n\n  a {\n    color: #666;\n  }\n\n  b {\n      font-weight: bold;\n  }\n`\n\nconst PostList = () => {\n    const [post] = useContext(PostsContext)\n    return (\n      <>\n        <List>\n          <Reset />\n          {post.map(post => <ListItem key={Math.random()}>\n            <Link href={post.url}>{post.title}</Link>\n            { post.author &&\n              <Sub>Author: {post.author}</Sub>\n            }\n            { post.score && <Sub>Score: {post.score}</Sub> }\n            { post.comments > 0 && \n              <Sub>\n                <a href={post.comment_link}>\n                  <span>{post.comments}</span> comments\n                </a>\n              </Sub>\n            }\n            {\n                post.one_sources[0] &&\n                <Sub>\n                    <b>source: {post.one_sources[0]}</b>\n                </Sub>\n            }\n          </ListItem>)}\n        </List>\n      </>\n    )\n}\n\nexport default PostList","import React, { useContext } from 'react'\nimport { PostsContext } from '../Stores/Store'\nimport styled from 'styled-components'\n\nconst Nav = styled.nav`\n    background: #eee;\n    padding: 2em;\n\n    h2 {\n        font-family: sans-serif;\n        font-size: 2em;\n    }\n\n    li {\n        font-family: sans-serif;\n        margin: 1em;\n        color: #666;\n    }\n`\n\nconst Navigation = () => {\n    const [,setPost] = useContext(PostsContext)\n\n    async function handleList(source) {\n        const response = await fetch(`https://www.reader.one/api/all/${source}?limit=25`)\n        const data = await response.json()\n\n        setPost(data)\n    }\n\n    return (\n        <Nav>\n            <h2>Procast</h2>\n            <ul>\n                <li onClick={() => handleList('hn')}>Hacker News</li>\n                <li onClick={() => handleList('reddit')}>Reddit</li>\n                <li onClick={() => handleList('ph')}>Product Hunt</li>\n                <li onClick={() => handleList('slashdot')}>Slashdot</li>\n                <li onClick={() => handleList('dn')}>Designer News</li>\n                <li onClick={() => handleList('github')}>Github Trending</li>\n                <li onClick={() => handleList('medium')}>Medium</li>\n                <li onClick={() => handleList('lifehacker')}>Lifehacker</li>\n            </ul>\n        </Nav>\n    )\n}\n\nexport default Navigation","import React from 'react'\nimport PostList from './Components/postList'\nimport Nav from './Components/navigation'\nimport styled from 'styled-components'\nimport { Reset } from 'styled-reset'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nexport default function App() {\n  return (\n    <Wrapper>\n      <Reset />\n      <Nav />\n      <PostList />\n    </Wrapper>\n  )\n}","import React from 'react'\nimport { render } from 'react-dom'\nimport App from './App'\nimport Store from './Stores/Store'\n\nconst Index = () => (\n  <Store>\n    <App />\n  </Store>\n)\n\nrender(<Index />, document.getElementById('root'))"],"sourceRoot":""}